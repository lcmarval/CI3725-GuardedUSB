
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightTkIfleftTkAsigleftTkPlusTkMinusleftTkMultTkDivTkModleftTkOrrightTkAndrightTkNotTkUminusleftTkConcatleftTkCBracketrightTkOBracketnonassocTkLeqTkGeqTkEqualTkNEqualTkLessTkGreaterleftTkCloseParrightTkOpenParleftTkArrownonassocTkNumTkIdTkRofTkAnd TkArray TkArrow TkAsig TkAtoi TkBool TkCBlock TkCBracket TkClosePar TkComma TkComments TkConcat TkDeclare TkDiv TkDo TkEqual TkFalse TkFi TkFor TkGeq TkGreater TkGuard TkId TkIf TkIn TkInt TkLeq TkLess TkMax TkMin TkMinus TkMod TkMult TkNEqual TkNot TkNum TkOBlock TkOBracket TkOd TkOpenPar TkOr TkPlus TkPrint TkPrintln TkPunto TkRead TkRof TkSemicolon TkSize TkSoForth TkString TkTo TkTrue TkTwoPoints TkUminus start : block  block : TkOBlock sequencing TkCBlock\n    | TkOBlock TkDeclare declare_var sequencing TkCBlock  declare_var : variables TkTwoPoints type TkSemicolon declare_var\n    | variables  TkTwoPoints type   variables : TkId TkComma variables\n    | TkId  array : TkArray TkOBracket expression TkSoForth expression TkCBracket\n    op_array : TkAtoi TkOpenPar TkId TkClosePar\n    | TkSize TkOpenPar TkId TkClosePar\n    | TkMin TkOpenPar TkId TkClosePar\n    | TkMax TkOpenPar TkId TkClosePar\n    | TkAtoi TkOpenPar array_exp TkClosePar\n    | TkSize TkOpenPar array_exp TkClosePar\n    | TkMin TkOpenPar array_exp TkClosePar\n    | TkMax TkOpenPar array_exp TkClosePar\n     array_exp : TkId TkOpenPar expression TkTwoPoints expression TkClosePar array_exp1\n    | TkId TkOpenPar expression TkTwoPoints expression TkClosePar\n    | TkId TkOBracket expression TkCBracket\n     array_exp1 : TkOpenPar expression TkTwoPoints expression TkClosePar array_exp1 \n    | TkOpenPar expression TkTwoPoints expression TkClosePar array_exp2\n    | TkOpenPar expression TkTwoPoints expression TkClosePar  array_exp2 : TkOBracket expression TkCBracket type : TkInt\n    | TkBool\n    | array\n    | TkInt TkComma type\n    | TkBool TkComma type\n    | array TkComma type  sequencing : instruction TkSemicolon\n    | instruction TkSemicolon sequencing instruction : assign_inst\n    | input_inst\n    | output_inst\n    | if_inst\n    | iteration_for_inst\n    | iteration_mult_guard_inst\n    | block expression : TkOpenPar expression TkClosePar\n    | expression TkConcat expression\n    | expression TkPlus expression \n    | expression TkMinus expression \n    | expression TkMult expression \n    | expression TkDiv expression \n    | expression TkMod expression \n    | expression TkAnd expression\n    | expression TkOr expression \n    | expression TkLess expression\n    | expression TkLeq expression \n    | expression TkGreater expression \n    | expression TkGeq expression \n    | expression TkEqual expression \n    | expression TkNEqual expression\n    | TkMinus expression %prec TkUminus \n    | TkNot expression\n    | op_array\n    | array_exp\n    | TkString   \n    | TkId  \n    | TkNum\n    | TkTrue \n    | TkFalse\n     assign_inst : TkId TkAsig expression assign1\n    | TkId TkAsig expression  assign1 : TkComma expression assign1\n    | TkComma expression  input_inst : TkRead TkId output_inst : TkPrint expression\n    | TkPrintln expression if_inst : TkIf expression TkArrow sequencing TkFi \n    | TkIf expression TkArrow sequencing guards_inst TkFi\n    guards_inst : TkGuard expression TkArrow sequencing\n    | TkGuard expression TkArrow sequencing guards_inst  iteration_for_inst : TkFor TkId TkIn expression TkTo expression TkArrow block TkRof\n    iteration_mult_guard_inst : TkDo expression TkArrow sequencing TkOd\n    | TkDo expression TkArrow sequencing guards_inst TkOd '
    
_lr_action_items = {'TkOBlock':([0,3,22,25,75,77,79,80,81,82,137,138,139,140,150,151,157,],[3,3,3,3,3,3,-5,-24,-25,-26,-4,-27,-28,-29,3,3,-8,]),'$end':([1,2,21,78,],[0,-1,-2,-3,]),'TkDeclare':([3,],[5,]),'TkId':([3,5,15,16,17,18,19,20,22,25,26,29,30,31,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,69,70,71,72,73,74,75,76,77,79,80,81,82,86,115,119,121,133,134,137,138,139,140,148,150,153,157,161,166,],[14,24,27,35,35,35,45,35,14,14,35,35,35,35,24,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,104,106,108,110,14,35,14,-5,-24,-25,-26,35,24,35,35,35,35,-4,-27,-28,-29,35,14,35,-8,35,35,]),'TkRead':([3,22,25,75,77,79,80,81,82,137,138,139,140,150,157,],[15,15,15,15,15,-5,-24,-25,-26,-4,-27,-28,-29,15,-8,]),'TkPrint':([3,22,25,75,77,79,80,81,82,137,138,139,140,150,157,],[16,16,16,16,16,-5,-24,-25,-26,-4,-27,-28,-29,16,-8,]),'TkPrintln':([3,22,25,75,77,79,80,81,82,137,138,139,140,150,157,],[17,17,17,17,17,-5,-24,-25,-26,-4,-27,-28,-29,17,-8,]),'TkIf':([3,22,25,75,77,79,80,81,82,137,138,139,140,150,157,],[18,18,18,18,18,-5,-24,-25,-26,-4,-27,-28,-29,18,-8,]),'TkFor':([3,22,25,75,77,79,80,81,82,137,138,139,140,150,157,],[19,19,19,19,19,-5,-24,-25,-26,-4,-27,-28,-29,19,-8,]),'TkDo':([3,22,25,75,77,79,80,81,82,137,138,139,140,150,157,],[20,20,20,20,20,-5,-24,-25,-26,-4,-27,-28,-29,20,-8,]),'TkCBlock':([4,25,47,50,],[21,-30,78,-31,]),'TkSemicolon':([6,7,8,9,10,11,12,13,21,27,28,32,33,34,35,36,37,38,43,51,67,68,78,79,80,81,82,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,120,122,123,124,125,126,127,128,129,130,131,135,138,139,140,142,144,147,149,154,157,160,163,164,165,168,],[25,-32,-33,-34,-35,-36,-37,-38,-2,-67,-68,-56,-57,-58,-59,-60,-61,-62,-69,-64,-54,-55,-3,115,-24,-25,-26,-63,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-39,-66,-19,-9,-13,-10,-14,-11,-15,-12,-16,-70,-75,-27,-28,-29,-65,-71,-76,-18,-17,-8,-74,-22,-20,-21,-23,]),'TkAsig':([14,],[26,]),'TkOpenPar':([16,17,18,20,26,29,30,31,35,39,40,41,42,52,53,54,55,56,57,58,59,60,61,62,63,64,65,69,70,76,86,104,106,108,110,119,121,133,134,148,149,153,161,163,166,],[29,29,29,29,29,29,29,29,69,71,72,73,74,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,69,69,69,69,29,29,29,29,29,153,29,29,153,29,]),'TkMinus':([16,17,18,20,26,28,29,30,31,32,33,34,35,36,37,38,43,44,46,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,76,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,113,119,120,121,122,123,124,125,126,127,128,129,130,133,134,141,143,145,146,148,149,152,153,154,158,161,162,163,164,165,166,167,168,],[30,30,30,30,30,54,30,30,30,-56,-57,-58,-59,-60,-61,-62,54,54,54,54,30,30,30,30,30,30,30,30,30,30,30,30,30,30,54,-54,-55,30,30,30,30,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-39,54,54,54,30,54,30,-19,-9,-13,-10,-14,-11,-15,-12,-16,30,30,54,54,54,54,30,-18,54,30,-17,54,30,54,-22,-20,-21,30,54,-23,]),'TkNot':([16,17,18,20,26,29,30,31,52,53,54,55,56,57,58,59,60,61,62,63,64,65,69,70,76,86,119,121,133,134,148,153,161,166,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'TkString':([16,17,18,20,26,29,30,31,52,53,54,55,56,57,58,59,60,61,62,63,64,65,69,70,76,86,119,121,133,134,148,153,161,166,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'TkNum':([16,17,18,20,26,29,30,31,52,53,54,55,56,57,58,59,60,61,62,63,64,65,69,70,76,86,119,121,133,134,148,153,161,166,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'TkTrue':([16,17,18,20,26,29,30,31,52,53,54,55,56,57,58,59,60,61,62,63,64,65,69,70,76,86,119,121,133,134,148,153,161,166,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'TkFalse':([16,17,18,20,26,29,30,31,52,53,54,55,56,57,58,59,60,61,62,63,64,65,69,70,76,86,119,121,133,134,148,153,161,166,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'TkAtoi':([16,17,18,20,26,29,30,31,52,53,54,55,56,57,58,59,60,61,62,63,64,65,69,70,76,86,119,121,133,134,148,153,161,166,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'TkSize':([16,17,18,20,26,29,30,31,52,53,54,55,56,57,58,59,60,61,62,63,64,65,69,70,76,86,119,121,133,134,148,153,161,166,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'TkMin':([16,17,18,20,26,29,30,31,52,53,54,55,56,57,58,59,60,61,62,63,64,65,69,70,76,86,119,121,133,134,148,153,161,166,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'TkMax':([16,17,18,20,26,29,30,31,52,53,54,55,56,57,58,59,60,61,62,63,64,65,69,70,76,86,119,121,133,134,148,153,161,166,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'TkRof':([21,78,156,],[-2,-3,160,]),'TkTwoPoints':([23,24,32,33,34,35,36,37,38,67,68,84,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,122,123,124,125,126,127,128,129,130,149,154,158,163,164,165,168,],[48,-7,-56,-57,-58,-59,-60,-61,-62,-54,-55,-6,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-39,121,-19,-9,-13,-10,-14,-11,-15,-12,-16,-18,-17,161,-22,-20,-21,-23,]),'TkComma':([24,32,33,34,35,36,37,38,51,67,68,80,81,82,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,120,122,123,124,125,126,127,128,129,130,149,154,157,163,164,165,168,],[49,-56,-57,-58,-59,-60,-61,-62,86,-54,-55,116,117,118,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-39,86,-19,-9,-13,-10,-14,-11,-15,-12,-16,-18,-17,-8,-22,-20,-21,-23,]),'TkFi':([25,50,112,132,155,159,],[-30,-31,131,144,-72,-73,]),'TkGuard':([25,50,112,114,155,],[-30,-31,133,133,133,]),'TkOd':([25,50,114,136,155,159,],[-30,-31,135,147,-72,-73,]),'TkConcat':([28,32,33,34,35,36,37,38,43,44,46,51,66,67,68,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,113,120,122,123,124,125,126,127,128,129,130,141,143,145,146,149,152,154,158,162,163,164,165,167,168,],[52,-56,-57,-58,-59,-60,-61,-62,52,52,52,52,52,52,52,-40,52,52,52,52,52,52,52,-48,-49,-50,-51,-52,-53,-39,52,52,52,52,-19,-9,-13,-10,-14,-11,-15,-12,-16,52,52,52,52,-18,52,-17,52,52,-22,-20,-21,52,-23,]),'TkPlus':([28,32,33,34,35,36,37,38,43,44,46,51,66,67,68,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,113,120,122,123,124,125,126,127,128,129,130,141,143,145,146,149,152,154,158,162,163,164,165,167,168,],[53,-56,-57,-58,-59,-60,-61,-62,53,53,53,53,53,-54,-55,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-39,53,53,53,53,-19,-9,-13,-10,-14,-11,-15,-12,-16,53,53,53,53,-18,53,-17,53,53,-22,-20,-21,53,-23,]),'TkMult':([28,32,33,34,35,36,37,38,43,44,46,51,66,67,68,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,113,120,122,123,124,125,126,127,128,129,130,141,143,145,146,149,152,154,158,162,163,164,165,167,168,],[55,-56,-57,-58,-59,-60,-61,-62,55,55,55,55,55,-54,-55,-40,55,55,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-39,55,55,55,55,-19,-9,-13,-10,-14,-11,-15,-12,-16,55,55,55,55,-18,55,-17,55,55,-22,-20,-21,55,-23,]),'TkDiv':([28,32,33,34,35,36,37,38,43,44,46,51,66,67,68,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,113,120,122,123,124,125,126,127,128,129,130,141,143,145,146,149,152,154,158,162,163,164,165,167,168,],[56,-56,-57,-58,-59,-60,-61,-62,56,56,56,56,56,-54,-55,-40,56,56,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-39,56,56,56,56,-19,-9,-13,-10,-14,-11,-15,-12,-16,56,56,56,56,-18,56,-17,56,56,-22,-20,-21,56,-23,]),'TkMod':([28,32,33,34,35,36,37,38,43,44,46,51,66,67,68,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,113,120,122,123,124,125,126,127,128,129,130,141,143,145,146,149,152,154,158,162,163,164,165,167,168,],[57,-56,-57,-58,-59,-60,-61,-62,57,57,57,57,57,-54,-55,-40,57,57,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-39,57,57,57,57,-19,-9,-13,-10,-14,-11,-15,-12,-16,57,57,57,57,-18,57,-17,57,57,-22,-20,-21,57,-23,]),'TkAnd':([28,32,33,34,35,36,37,38,43,44,46,51,66,67,68,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,113,120,122,123,124,125,126,127,128,129,130,141,143,145,146,149,152,154,158,162,163,164,165,167,168,],[58,-56,-57,-58,-59,-60,-61,-62,58,58,58,58,58,-54,-55,-40,58,58,58,58,58,58,58,-48,-49,-50,-51,-52,-53,-39,58,58,58,58,-19,-9,-13,-10,-14,-11,-15,-12,-16,58,58,58,58,-18,58,-17,58,58,-22,-20,-21,58,-23,]),'TkOr':([28,32,33,34,35,36,37,38,43,44,46,51,66,67,68,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,113,120,122,123,124,125,126,127,128,129,130,141,143,145,146,149,152,154,158,162,163,164,165,167,168,],[59,-56,-57,-58,-59,-60,-61,-62,59,59,59,59,59,-54,-55,-40,59,59,59,59,59,-46,-47,-48,-49,-50,-51,-52,-53,-39,59,59,59,59,-19,-9,-13,-10,-14,-11,-15,-12,-16,59,59,59,59,-18,59,-17,59,59,-22,-20,-21,59,-23,]),'TkLess':([28,32,33,34,35,36,37,38,43,44,46,51,66,67,68,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,113,120,122,123,124,125,126,127,128,129,130,141,143,145,146,149,152,154,158,162,163,164,165,167,168,],[60,-56,-57,-58,-59,-60,-61,-62,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,None,None,None,None,None,None,-39,60,60,60,60,-19,-9,-13,-10,-14,-11,-15,-12,-16,60,60,60,60,-18,60,-17,60,60,-22,-20,-21,60,-23,]),'TkLeq':([28,32,33,34,35,36,37,38,43,44,46,51,66,67,68,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,113,120,122,123,124,125,126,127,128,129,130,141,143,145,146,149,152,154,158,162,163,164,165,167,168,],[61,-56,-57,-58,-59,-60,-61,-62,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,None,None,None,None,None,None,-39,61,61,61,61,-19,-9,-13,-10,-14,-11,-15,-12,-16,61,61,61,61,-18,61,-17,61,61,-22,-20,-21,61,-23,]),'TkGreater':([28,32,33,34,35,36,37,38,43,44,46,51,66,67,68,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,113,120,122,123,124,125,126,127,128,129,130,141,143,145,146,149,152,154,158,162,163,164,165,167,168,],[62,-56,-57,-58,-59,-60,-61,-62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,None,None,None,None,None,None,-39,62,62,62,62,-19,-9,-13,-10,-14,-11,-15,-12,-16,62,62,62,62,-18,62,-17,62,62,-22,-20,-21,62,-23,]),'TkGeq':([28,32,33,34,35,36,37,38,43,44,46,51,66,67,68,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,113,120,122,123,124,125,126,127,128,129,130,141,143,145,146,149,152,154,158,162,163,164,165,167,168,],[63,-56,-57,-58,-59,-60,-61,-62,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,None,None,None,None,None,None,-39,63,63,63,63,-19,-9,-13,-10,-14,-11,-15,-12,-16,63,63,63,63,-18,63,-17,63,63,-22,-20,-21,63,-23,]),'TkEqual':([28,32,33,34,35,36,37,38,43,44,46,51,66,67,68,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,113,120,122,123,124,125,126,127,128,129,130,141,143,145,146,149,152,154,158,162,163,164,165,167,168,],[64,-56,-57,-58,-59,-60,-61,-62,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,None,None,None,None,None,None,-39,64,64,64,64,-19,-9,-13,-10,-14,-11,-15,-12,-16,64,64,64,64,-18,64,-17,64,64,-22,-20,-21,64,-23,]),'TkNEqual':([28,32,33,34,35,36,37,38,43,44,46,51,66,67,68,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,113,120,122,123,124,125,126,127,128,129,130,141,143,145,146,149,152,154,158,162,163,164,165,167,168,],[65,-56,-57,-58,-59,-60,-61,-62,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,None,None,None,None,None,None,-39,65,65,65,65,-19,-9,-13,-10,-14,-11,-15,-12,-16,65,65,65,65,-18,65,-17,65,65,-22,-20,-21,65,-23,]),'TkArrow':([32,33,34,35,36,37,38,44,46,67,68,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,122,123,124,125,126,127,128,129,130,145,146,149,154,163,164,165,168,],[-56,-57,-58,-59,-60,-61,-62,75,77,-54,-55,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-39,-19,-9,-13,-10,-14,-11,-15,-12,-16,150,151,-18,-17,-22,-20,-21,-23,]),'TkClosePar':([32,33,34,35,36,37,38,66,67,68,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,104,105,106,107,108,109,110,111,122,123,124,125,126,127,128,129,130,143,149,154,162,163,164,165,168,],[-56,-57,-58,-59,-60,-61,-62,101,-54,-55,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-39,123,124,125,126,127,128,129,130,-19,-9,-13,-10,-14,-11,-15,-12,-16,149,-18,-17,163,-22,-20,-21,-23,]),'TkCBracket':([32,33,34,35,36,37,38,67,68,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,122,123,124,125,126,127,128,129,130,149,152,154,163,164,165,167,168,],[-56,-57,-58,-59,-60,-61,-62,-54,-55,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-39,122,-19,-9,-13,-10,-14,-11,-15,-12,-16,-18,157,-17,-22,-20,-21,168,-23,]),'TkTo':([32,33,34,35,36,37,38,67,68,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,113,122,123,124,125,126,127,128,129,130,149,154,163,164,165,168,],[-56,-57,-58,-59,-60,-61,-62,-54,-55,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-39,134,-19,-9,-13,-10,-14,-11,-15,-12,-16,-18,-17,-22,-20,-21,-23,]),'TkSoForth':([32,33,34,35,36,37,38,67,68,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,122,123,124,125,126,127,128,129,130,141,149,154,163,164,165,168,],[-56,-57,-58,-59,-60,-61,-62,-54,-55,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-39,-19,-9,-13,-10,-14,-11,-15,-12,-16,148,-18,-17,-22,-20,-21,-23,]),'TkOBracket':([35,83,104,106,108,110,163,],[70,119,70,70,70,70,166,]),'TkIn':([45,],[76,]),'TkInt':([48,116,117,118,],[80,80,80,80,]),'TkBool':([48,116,117,118,],[81,81,81,81,]),'TkArray':([48,116,117,118,],[83,83,83,83,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'block':([0,3,22,25,75,77,150,151,],[2,13,13,13,13,13,13,156,]),'sequencing':([3,22,25,75,77,150,],[4,47,50,112,114,155,]),'instruction':([3,22,25,75,77,150,],[6,6,6,6,6,6,]),'assign_inst':([3,22,25,75,77,150,],[7,7,7,7,7,7,]),'input_inst':([3,22,25,75,77,150,],[8,8,8,8,8,8,]),'output_inst':([3,22,25,75,77,150,],[9,9,9,9,9,9,]),'if_inst':([3,22,25,75,77,150,],[10,10,10,10,10,10,]),'iteration_for_inst':([3,22,25,75,77,150,],[11,11,11,11,11,11,]),'iteration_mult_guard_inst':([3,22,25,75,77,150,],[12,12,12,12,12,12,]),'declare_var':([5,115,],[22,137,]),'variables':([5,49,115,],[23,84,23,]),'expression':([16,17,18,20,26,29,30,31,52,53,54,55,56,57,58,59,60,61,62,63,64,65,69,70,76,86,119,121,133,134,148,153,161,166,],[28,43,44,46,51,66,67,68,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,113,120,141,143,145,146,152,158,162,167,]),'op_array':([16,17,18,20,26,29,30,31,52,53,54,55,56,57,58,59,60,61,62,63,64,65,69,70,76,86,119,121,133,134,148,153,161,166,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'array_exp':([16,17,18,20,26,29,30,31,52,53,54,55,56,57,58,59,60,61,62,63,64,65,69,70,71,72,73,74,76,86,119,121,133,134,148,153,161,166,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,105,107,109,111,33,33,33,33,33,33,33,33,33,33,]),'type':([48,116,117,118,],[79,138,139,140,]),'array':([48,116,117,118,],[82,82,82,82,]),'assign1':([51,120,],[85,142,]),'guards_inst':([112,114,155,],[132,136,159,]),'array_exp1':([149,163,],[154,164,]),'array_exp2':([163,],[165,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> block','start',1,'p_start','parser.py',71),
  ('block -> TkOBlock sequencing TkCBlock','block',3,'p_block','parser.py',76),
  ('block -> TkOBlock TkDeclare declare_var sequencing TkCBlock','block',5,'p_block','parser.py',77),
  ('declare_var -> variables TkTwoPoints type TkSemicolon declare_var','declare_var',5,'p_declare_var','parser.py',86),
  ('declare_var -> variables TkTwoPoints type','declare_var',3,'p_declare_var','parser.py',87),
  ('variables -> TkId TkComma variables','variables',3,'p_variables','parser.py',96),
  ('variables -> TkId','variables',1,'p_variables','parser.py',97),
  ('array -> TkArray TkOBracket expression TkSoForth expression TkCBracket','array',6,'p_array','parser.py',109),
  ('op_array -> TkAtoi TkOpenPar TkId TkClosePar','op_array',4,'p_op_array','parser.py',115),
  ('op_array -> TkSize TkOpenPar TkId TkClosePar','op_array',4,'p_op_array','parser.py',116),
  ('op_array -> TkMin TkOpenPar TkId TkClosePar','op_array',4,'p_op_array','parser.py',117),
  ('op_array -> TkMax TkOpenPar TkId TkClosePar','op_array',4,'p_op_array','parser.py',118),
  ('op_array -> TkAtoi TkOpenPar array_exp TkClosePar','op_array',4,'p_op_array','parser.py',119),
  ('op_array -> TkSize TkOpenPar array_exp TkClosePar','op_array',4,'p_op_array','parser.py',120),
  ('op_array -> TkMin TkOpenPar array_exp TkClosePar','op_array',4,'p_op_array','parser.py',121),
  ('op_array -> TkMax TkOpenPar array_exp TkClosePar','op_array',4,'p_op_array','parser.py',122),
  ('array_exp -> TkId TkOpenPar expression TkTwoPoints expression TkClosePar array_exp1','array_exp',7,'p_array_exp','parser.py',129),
  ('array_exp -> TkId TkOpenPar expression TkTwoPoints expression TkClosePar','array_exp',6,'p_array_exp','parser.py',130),
  ('array_exp -> TkId TkOBracket expression TkCBracket','array_exp',4,'p_array_exp','parser.py',131),
  ('array_exp1 -> TkOpenPar expression TkTwoPoints expression TkClosePar array_exp1','array_exp1',6,'p_array_exp1','parser.py',143),
  ('array_exp1 -> TkOpenPar expression TkTwoPoints expression TkClosePar array_exp2','array_exp1',6,'p_array_exp1','parser.py',144),
  ('array_exp1 -> TkOpenPar expression TkTwoPoints expression TkClosePar','array_exp1',5,'p_array_exp1','parser.py',145),
  ('array_exp2 -> TkOBracket expression TkCBracket','array_exp2',3,'p_array_exp2','parser.py',153),
  ('type -> TkInt','type',1,'p_type','parser.py',159),
  ('type -> TkBool','type',1,'p_type','parser.py',160),
  ('type -> array','type',1,'p_type','parser.py',161),
  ('type -> TkInt TkComma type','type',3,'p_type','parser.py',162),
  ('type -> TkBool TkComma type','type',3,'p_type','parser.py',163),
  ('type -> array TkComma type','type',3,'p_type','parser.py',164),
  ('sequencing -> instruction TkSemicolon','sequencing',2,'p_sequencing','parser.py',174),
  ('sequencing -> instruction TkSemicolon sequencing','sequencing',3,'p_sequencing','parser.py',175),
  ('instruction -> assign_inst','instruction',1,'p_instruction','parser.py',183),
  ('instruction -> input_inst','instruction',1,'p_instruction','parser.py',184),
  ('instruction -> output_inst','instruction',1,'p_instruction','parser.py',185),
  ('instruction -> if_inst','instruction',1,'p_instruction','parser.py',186),
  ('instruction -> iteration_for_inst','instruction',1,'p_instruction','parser.py',187),
  ('instruction -> iteration_mult_guard_inst','instruction',1,'p_instruction','parser.py',188),
  ('instruction -> block','instruction',1,'p_instruction','parser.py',189),
  ('expression -> TkOpenPar expression TkClosePar','expression',3,'p_expression','parser.py',194),
  ('expression -> expression TkConcat expression','expression',3,'p_expression','parser.py',195),
  ('expression -> expression TkPlus expression','expression',3,'p_expression','parser.py',196),
  ('expression -> expression TkMinus expression','expression',3,'p_expression','parser.py',197),
  ('expression -> expression TkMult expression','expression',3,'p_expression','parser.py',198),
  ('expression -> expression TkDiv expression','expression',3,'p_expression','parser.py',199),
  ('expression -> expression TkMod expression','expression',3,'p_expression','parser.py',200),
  ('expression -> expression TkAnd expression','expression',3,'p_expression','parser.py',201),
  ('expression -> expression TkOr expression','expression',3,'p_expression','parser.py',202),
  ('expression -> expression TkLess expression','expression',3,'p_expression','parser.py',203),
  ('expression -> expression TkLeq expression','expression',3,'p_expression','parser.py',204),
  ('expression -> expression TkGreater expression','expression',3,'p_expression','parser.py',205),
  ('expression -> expression TkGeq expression','expression',3,'p_expression','parser.py',206),
  ('expression -> expression TkEqual expression','expression',3,'p_expression','parser.py',207),
  ('expression -> expression TkNEqual expression','expression',3,'p_expression','parser.py',208),
  ('expression -> TkMinus expression','expression',2,'p_expression','parser.py',209),
  ('expression -> TkNot expression','expression',2,'p_expression','parser.py',210),
  ('expression -> op_array','expression',1,'p_expression','parser.py',211),
  ('expression -> array_exp','expression',1,'p_expression','parser.py',212),
  ('expression -> TkString','expression',1,'p_expression','parser.py',213),
  ('expression -> TkId','expression',1,'p_expression','parser.py',214),
  ('expression -> TkNum','expression',1,'p_expression','parser.py',215),
  ('expression -> TkTrue','expression',1,'p_expression','parser.py',216),
  ('expression -> TkFalse','expression',1,'p_expression','parser.py',217),
  ('assign_inst -> TkId TkAsig expression assign1','assign_inst',4,'p_assign_inst','parser.py',279),
  ('assign_inst -> TkId TkAsig expression','assign_inst',3,'p_assign_inst','parser.py',280),
  ('assign1 -> TkComma expression assign1','assign1',3,'p_assign1','parser.py',288),
  ('assign1 -> TkComma expression','assign1',2,'p_assign1','parser.py',289),
  ('input_inst -> TkRead TkId','input_inst',2,'p_input_inst','parser.py',297),
  ('output_inst -> TkPrint expression','output_inst',2,'p_output_inst','parser.py',301),
  ('output_inst -> TkPrintln expression','output_inst',2,'p_output_inst','parser.py',302),
  ('if_inst -> TkIf expression TkArrow sequencing TkFi','if_inst',5,'p_if_inst','parser.py',306),
  ('if_inst -> TkIf expression TkArrow sequencing guards_inst TkFi','if_inst',6,'p_if_inst','parser.py',307),
  ('guards_inst -> TkGuard expression TkArrow sequencing','guards_inst',4,'p_guards_inst','parser.py',315),
  ('guards_inst -> TkGuard expression TkArrow sequencing guards_inst','guards_inst',5,'p_guards_inst','parser.py',316),
  ('iteration_for_inst -> TkFor TkId TkIn expression TkTo expression TkArrow block TkRof','iteration_for_inst',9,'p_iteration_for_inst','parser.py',323),
  ('iteration_mult_guard_inst -> TkDo expression TkArrow sequencing TkOd','iteration_mult_guard_inst',5,'p_iteration_mult_guard_inst','parser.py',328),
  ('iteration_mult_guard_inst -> TkDo expression TkArrow sequencing guards_inst TkOd','iteration_mult_guard_inst',6,'p_iteration_mult_guard_inst','parser.py',329),
]
