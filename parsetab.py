
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftTkPlusTkMinusleftTkMultTkDivTkModleftTkOrrightTkAndrightTkNotTkUminusleftTkConcatleftTkOBracketTkCBracketnonassocTkLeqTkGeqTkEqualTkNEqualTkLessTkGreaterleftTkOpenParTkCloseParleftTkArrowTkAnd TkArray TkArrow TkAsig TkAtoi TkBool TkCBlock TkCBracket TkClosePar TkComma TkComments TkConcat TkDeclare TkDiv TkDo TkEqual TkFalse TkFi TkFor TkGeq TkGreater TkGuard TkId TkIf TkIn TkInt TkLeq TkLess TkMax TkMin TkMinus TkMod TkMult TkNEqual TkNot TkNum TkOBlock TkOBracket TkOd TkOpenPar TkOr TkPlus TkPrint TkPrintln TkPunto TkRead TkRof TkSemicolon TkSize TkSoForth TkString TkTo TkTrue TkTwoPoints TkUminusblock : TkOBlock TkCBlock\n    | TkOBlock TkDeclare variable_List instruction_block TkCBlock \n    | TkOBlock instruction_block TkCBlock variable_List : TkId TkComma variable_List   \n                      | TkId TkTwoPoints type TkComma variable_List\n                      | TkId TkTwoPoints type TkSemicolon\n                      | TkId TkTwoPoints type\n                      | type TkComma variable_List\n                      | type TkSemicolon\n                      | type  type : TkArray TkOBracket TkNum TkSoForth TkNum TkCBracket\n    | TkInt\n    | TkBool instruction_block : instructions TkSemicolon instruction_block\n    | instructions instructions : assign_inst\n    | input_inst\n    | output_inst\n    | if_guard_inst\n    | iteration_for_inst\n    | iteration_mult_guard_inst\n    | block assign_inst : TkId TkAsig expressionarray_exp : TkId TkOpenPar expression TkTwoPoints expression TkClosePar array_exp \n    | TkOpenPar expression TkTwoPoints expression TkClosePar array_exp\n    | TkId TkOBracket expression TkCBracket\n    | TkId TkConcat TkId\n    | array_exp TkConcat TkId\n    | TkId TkConcat array_exp\n    | array_exp TkConcat array_exp\n    | TkOBracket expression TkCBracket\n    | TkAtoi TkOpenPar TkId TkClosePar\n    | TkSize TkOpenPar TkId TkClosePar\n    | TkMax TkOpenPar TkId TkClosePar\n    | TkMin TkOpenPar TkId TkClosePar\n     array_exp1 : TkOpenPar array_exp TkClosePar expression : TkOpenPar binop TkClosePar\n    | TkOpenPar TkUminus expression TkClosePar\n    | TkOpenPar TkNot expression TkClosePar\n    | TkOpenPar literal TkClosePar\n    | TkUminus expression\n    | TkNot expression\n    | literal\n    | binop  binop : expression TkPlus expression\n    | expression TkMinus expression\n    | expression TkMult expression\n    | expression TkDiv expression\n    | expression TkMod expression\n    | expression TkLeq expression\n    | expression TkGeq expression\n    | expression TkLess expression\n    | expression TkGreater expression\n    | expression TkNEqual expression\n    | expression TkEqual expression            \n    | expression TkOr expression\n    | expression TkAnd expression\n    | expression TkConcat expression\n    literal : array_exp\n    | TkId\n    | TkNum\n    | TkFalse\n    | TkTrue\n    | TkString      \n    | array_exp1  input_inst : TkRead TkId output_inst : TkPrint expression\n    | TkPrintln expression if_guard_inst : TkIf expression TkArrow instructions TkFi \n    | TkIf expression TkArrow instructions guards\n    guards : TkGuard expression TkArrow instructions TkFi\n    | TkGuard expression TkArrow instructions guards  iteration_for_inst : TkFor TkId TkIn expression TkTo expression TkArrow block TkRof\n    iteration_mult_guard_inst : TkDo expression TkArrow instructions guards TkOd\n    | TkDo expression TkArrow instructions TkOd '
    
_lr_action_items = {'TkOBlock':([0,2,21,23,25,26,28,57,92,94,96,97,98,136,153,160,164,165,],[2,2,2,-10,-12,-13,2,-9,2,2,-4,-7,-8,-6,-5,-11,2,2,]),'$end':([1,3,27,95,],[0,-1,-3,-2,]),'TkCBlock':([2,3,5,6,7,8,9,10,11,12,13,27,30,31,33,36,37,38,39,40,41,42,43,49,53,59,60,81,82,95,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,118,119,120,121,125,126,127,138,140,142,143,144,145,146,147,148,152,159,161,166,169,170,171,],[3,-1,27,-15,-16,-17,-18,-19,-20,-21,-22,-3,-66,-67,-44,-43,-59,-60,-61,-62,-63,-64,-65,-68,95,-14,-23,-41,-42,-2,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-37,-40,-36,-30,-28,-27,-29,-31,-38,-39,-26,-32,-33,-34,-35,-69,-70,-75,-74,-25,-24,-71,-72,-73,]),'TkDeclare':([2,],[4,]),'TkId':([2,4,15,16,17,18,19,20,21,23,25,26,28,29,32,34,35,44,54,56,57,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,78,83,84,85,86,88,89,90,91,92,93,94,96,97,98,116,122,135,136,141,149,150,153,155,160,163,164,],[14,22,30,38,38,38,51,38,14,-10,-12,-13,14,38,38,38,38,38,22,22,-9,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,121,38,38,125,128,129,130,131,14,38,14,-4,-7,-8,38,38,22,-6,38,38,38,-5,162,-11,162,14,]),'TkRead':([2,21,23,25,26,28,57,92,94,96,97,98,136,153,160,164,],[15,15,-10,-12,-13,15,-9,15,15,-4,-7,-8,-6,-5,-11,15,]),'TkPrint':([2,21,23,25,26,28,57,92,94,96,97,98,136,153,160,164,],[16,16,-10,-12,-13,16,-9,16,16,-4,-7,-8,-6,-5,-11,16,]),'TkPrintln':([2,21,23,25,26,28,57,92,94,96,97,98,136,153,160,164,],[17,17,-10,-12,-13,17,-9,17,17,-4,-7,-8,-6,-5,-11,17,]),'TkIf':([2,21,23,25,26,28,57,92,94,96,97,98,136,153,160,164,],[18,18,-10,-12,-13,18,-9,18,18,-4,-7,-8,-6,-5,-11,18,]),'TkFor':([2,21,23,25,26,28,57,92,94,96,97,98,136,153,160,164,],[19,19,-10,-12,-13,19,-9,19,19,-4,-7,-8,-6,-5,-11,19,]),'TkDo':([2,21,23,25,26,28,57,92,94,96,97,98,136,153,160,164,],[20,20,-10,-12,-13,20,-9,20,20,-4,-7,-8,-6,-5,-11,20,]),'TkSemicolon':([3,6,7,8,9,10,11,12,13,23,25,26,27,30,31,33,36,37,38,39,40,41,42,43,49,60,81,82,95,97,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,118,119,120,121,125,126,127,138,140,142,143,144,145,146,147,148,152,159,160,161,166,169,170,171,],[-1,28,-16,-17,-18,-19,-20,-21,-22,57,-12,-13,-3,-66,-67,-44,-43,-59,-60,-61,-62,-63,-64,-65,-68,-23,-41,-42,-2,136,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-37,-40,-36,-30,-28,-27,-29,-31,-38,-39,-26,-32,-33,-34,-35,-69,-70,-75,-74,-11,-25,-24,-71,-72,-73,]),'TkFi':([3,7,8,9,10,11,12,13,27,30,31,33,36,37,38,39,40,41,42,43,49,60,81,82,95,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,118,119,120,121,125,126,127,132,138,140,142,143,144,145,146,147,148,152,159,161,166,167,169,170,171,],[-1,-16,-17,-18,-19,-20,-21,-22,-3,-66,-67,-44,-43,-59,-60,-61,-62,-63,-64,-65,-68,-23,-41,-42,-2,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-37,-40,-36,-30,-28,-27,-29,-31,147,-38,-39,-26,-32,-33,-34,-35,-69,-70,-75,-74,-25,-24,169,-71,-72,-73,]),'TkGuard':([3,7,8,9,10,11,12,13,27,30,31,33,36,37,38,39,40,41,42,43,49,60,81,82,95,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,118,119,120,121,125,126,127,132,134,138,140,142,143,144,145,146,147,148,152,159,161,166,167,169,170,171,],[-1,-16,-17,-18,-19,-20,-21,-22,-3,-66,-67,-44,-43,-59,-60,-61,-62,-63,-64,-65,-68,-23,-41,-42,-2,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-37,-40,-36,-30,-28,-27,-29,-31,149,149,-38,-39,-26,-32,-33,-34,-35,-69,-70,-75,-74,-25,-24,149,-71,-72,-73,]),'TkOd':([3,7,8,9,10,11,12,13,27,30,31,33,36,37,38,39,40,41,42,43,49,60,81,82,95,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,118,119,120,121,125,126,127,134,138,140,142,143,144,145,146,147,148,151,152,159,161,166,169,170,171,],[-1,-16,-17,-18,-19,-20,-21,-22,-3,-66,-67,-44,-43,-59,-60,-61,-62,-63,-64,-65,-68,-23,-41,-42,-2,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-37,-40,-36,-30,-28,-27,-29,-31,152,-38,-39,-26,-32,-33,-34,-35,-69,-70,159,-75,-74,-25,-24,-71,-72,-73,]),'TkRof':([3,27,95,168,],[-1,-3,-2,171,]),'TkArray':([4,54,55,56,135,],[24,24,24,24,24,]),'TkInt':([4,54,55,56,135,],[25,25,25,25,25,]),'TkBool':([4,54,55,56,135,],[26,26,26,26,26,]),'TkAsig':([14,],[29,]),'TkOpenPar':([16,17,18,20,29,32,34,35,38,44,45,46,47,48,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,78,83,84,85,86,93,116,121,122,125,141,149,150,155,162,163,],[32,32,32,32,32,32,32,32,84,32,88,89,90,91,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,122,32,32,122,32,32,84,32,84,32,32,32,122,84,122,]),'TkUminus':([16,17,18,20,29,32,34,35,44,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,78,84,85,93,116,122,141,149,150,],[34,34,34,34,34,76,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'TkNot':([16,17,18,20,29,32,34,35,44,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,78,84,85,93,116,122,141,149,150,],[35,35,35,35,35,78,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'TkNum':([16,17,18,20,29,32,34,35,44,58,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,78,84,85,93,116,122,137,141,149,150,],[39,39,39,39,39,39,39,39,39,99,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,154,39,39,39,]),'TkFalse':([16,17,18,20,29,32,34,35,44,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,78,84,85,93,116,122,141,149,150,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'TkTrue':([16,17,18,20,29,32,34,35,44,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,78,84,85,93,116,122,141,149,150,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'TkString':([16,17,18,20,29,32,34,35,44,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,78,84,85,93,116,122,141,149,150,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'TkOBracket':([16,17,18,20,24,29,32,34,35,38,44,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,78,83,84,85,86,93,116,121,122,125,141,149,150,155,162,163,],[44,44,44,44,58,44,44,44,44,85,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,85,44,85,44,44,44,44,85,44,]),'TkAtoi':([16,17,18,20,29,32,34,35,44,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,78,83,84,85,86,93,116,122,141,149,150,155,163,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'TkSize':([16,17,18,20,29,32,34,35,44,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,78,83,84,85,86,93,116,122,141,149,150,155,163,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'TkMax':([16,17,18,20,29,32,34,35,44,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,78,83,84,85,86,93,116,122,141,149,150,155,163,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'TkMin':([16,17,18,20,29,32,34,35,44,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,78,83,84,85,86,93,116,122,141,149,150,155,163,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'TkComma':([22,23,25,26,97,160,],[54,56,-12,-13,135,-11,]),'TkTwoPoints':([22,33,36,37,38,39,40,41,42,43,75,77,79,80,81,82,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,123,125,126,127,138,140,142,143,144,145,146,161,166,],[55,-44,-43,-59,-60,-61,-62,-63,-64,-65,-44,116,-43,-59,-41,-42,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-37,-41,-42,-40,-36,-30,-28,141,-27,-29,-31,-38,-39,-26,-32,-33,-34,-35,-25,-24,]),'TkPlus':([31,33,36,37,38,39,40,41,42,43,49,50,52,60,75,77,79,80,81,82,87,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,123,124,125,126,127,133,138,139,140,142,143,144,145,146,156,157,158,161,166,],[61,-44,-43,-59,-60,-61,-62,-63,-64,-65,61,61,61,61,-44,61,-43,-59,-41,-42,61,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-37,-41,-42,-40,-36,-30,-28,61,61,-27,-29,-31,61,-38,61,-39,-26,-32,-33,-34,-35,61,61,61,-25,-24,]),'TkMinus':([31,33,36,37,38,39,40,41,42,43,49,50,52,60,75,77,79,80,81,82,87,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,123,124,125,126,127,133,138,139,140,142,143,144,145,146,156,157,158,161,166,],[62,-44,-43,-59,-60,-61,-62,-63,-64,-65,62,62,62,62,-44,62,-43,-59,-41,-42,62,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-37,-41,-42,-40,-36,-30,-28,62,62,-27,-29,-31,62,-38,62,-39,-26,-32,-33,-34,-35,62,62,62,-25,-24,]),'TkMult':([31,33,36,37,38,39,40,41,42,43,49,50,52,60,75,77,79,80,81,82,87,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,123,124,125,126,127,133,138,139,140,142,143,144,145,146,156,157,158,161,166,],[63,-44,-43,-59,-60,-61,-62,-63,-64,-65,63,63,63,63,-44,63,-43,-59,-41,-42,63,63,63,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-37,-41,-42,-40,-36,-30,-28,63,63,-27,-29,-31,63,-38,63,-39,-26,-32,-33,-34,-35,63,63,63,-25,-24,]),'TkDiv':([31,33,36,37,38,39,40,41,42,43,49,50,52,60,75,77,79,80,81,82,87,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,123,124,125,126,127,133,138,139,140,142,143,144,145,146,156,157,158,161,166,],[64,-44,-43,-59,-60,-61,-62,-63,-64,-65,64,64,64,64,-44,64,-43,-59,-41,-42,64,64,64,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-37,-41,-42,-40,-36,-30,-28,64,64,-27,-29,-31,64,-38,64,-39,-26,-32,-33,-34,-35,64,64,64,-25,-24,]),'TkMod':([31,33,36,37,38,39,40,41,42,43,49,50,52,60,75,77,79,80,81,82,87,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,123,124,125,126,127,133,138,139,140,142,143,144,145,146,156,157,158,161,166,],[65,-44,-43,-59,-60,-61,-62,-63,-64,-65,65,65,65,65,-44,65,-43,-59,-41,-42,65,65,65,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-37,-41,-42,-40,-36,-30,-28,65,65,-27,-29,-31,65,-38,65,-39,-26,-32,-33,-34,-35,65,65,65,-25,-24,]),'TkLeq':([31,33,36,37,38,39,40,41,42,43,49,50,52,60,75,77,79,80,81,82,87,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,123,124,125,126,127,133,138,139,140,142,143,144,145,146,156,157,158,161,166,],[66,-44,-43,-59,-60,-61,-62,-63,-64,-65,66,66,66,66,-44,66,-43,-59,66,66,66,66,66,66,66,66,None,None,None,None,None,None,66,66,66,-37,66,66,-40,-36,-30,-28,66,66,-27,-29,-31,66,-38,66,-39,-26,-32,-33,-34,-35,66,66,66,-25,-24,]),'TkGeq':([31,33,36,37,38,39,40,41,42,43,49,50,52,60,75,77,79,80,81,82,87,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,123,124,125,126,127,133,138,139,140,142,143,144,145,146,156,157,158,161,166,],[67,-44,-43,-59,-60,-61,-62,-63,-64,-65,67,67,67,67,-44,67,-43,-59,67,67,67,67,67,67,67,67,None,None,None,None,None,None,67,67,67,-37,67,67,-40,-36,-30,-28,67,67,-27,-29,-31,67,-38,67,-39,-26,-32,-33,-34,-35,67,67,67,-25,-24,]),'TkLess':([31,33,36,37,38,39,40,41,42,43,49,50,52,60,75,77,79,80,81,82,87,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,123,124,125,126,127,133,138,139,140,142,143,144,145,146,156,157,158,161,166,],[68,-44,-43,-59,-60,-61,-62,-63,-64,-65,68,68,68,68,-44,68,-43,-59,68,68,68,68,68,68,68,68,None,None,None,None,None,None,68,68,68,-37,68,68,-40,-36,-30,-28,68,68,-27,-29,-31,68,-38,68,-39,-26,-32,-33,-34,-35,68,68,68,-25,-24,]),'TkGreater':([31,33,36,37,38,39,40,41,42,43,49,50,52,60,75,77,79,80,81,82,87,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,123,124,125,126,127,133,138,139,140,142,143,144,145,146,156,157,158,161,166,],[69,-44,-43,-59,-60,-61,-62,-63,-64,-65,69,69,69,69,-44,69,-43,-59,69,69,69,69,69,69,69,69,None,None,None,None,None,None,69,69,69,-37,69,69,-40,-36,-30,-28,69,69,-27,-29,-31,69,-38,69,-39,-26,-32,-33,-34,-35,69,69,69,-25,-24,]),'TkNEqual':([31,33,36,37,38,39,40,41,42,43,49,50,52,60,75,77,79,80,81,82,87,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,123,124,125,126,127,133,138,139,140,142,143,144,145,146,156,157,158,161,166,],[70,-44,-43,-59,-60,-61,-62,-63,-64,-65,70,70,70,70,-44,70,-43,-59,70,70,70,70,70,70,70,70,None,None,None,None,None,None,70,70,70,-37,70,70,-40,-36,-30,-28,70,70,-27,-29,-31,70,-38,70,-39,-26,-32,-33,-34,-35,70,70,70,-25,-24,]),'TkEqual':([31,33,36,37,38,39,40,41,42,43,49,50,52,60,75,77,79,80,81,82,87,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,123,124,125,126,127,133,138,139,140,142,143,144,145,146,156,157,158,161,166,],[71,-44,-43,-59,-60,-61,-62,-63,-64,-65,71,71,71,71,-44,71,-43,-59,71,71,71,71,71,71,71,71,None,None,None,None,None,None,71,71,71,-37,71,71,-40,-36,-30,-28,71,71,-27,-29,-31,71,-38,71,-39,-26,-32,-33,-34,-35,71,71,71,-25,-24,]),'TkOr':([31,33,36,37,38,39,40,41,42,43,49,50,52,60,75,77,79,80,81,82,87,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,123,124,125,126,127,133,138,139,140,142,143,144,145,146,156,157,158,161,166,],[72,-44,-43,-59,-60,-61,-62,-63,-64,-65,72,72,72,72,-44,72,-43,-59,-41,-42,72,72,72,72,72,72,-50,-51,-52,-53,-54,-55,-56,-57,-58,-37,-41,-42,-40,-36,-30,-28,72,72,-27,-29,-31,72,-38,72,-39,-26,-32,-33,-34,-35,72,72,72,-25,-24,]),'TkAnd':([31,33,36,37,38,39,40,41,42,43,49,50,52,60,75,77,79,80,81,82,87,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,123,124,125,126,127,133,138,139,140,142,143,144,145,146,156,157,158,161,166,],[73,-44,-43,-59,-60,-61,-62,-63,-64,-65,73,73,73,73,-44,73,-43,-59,-41,-42,73,73,73,73,73,73,-50,-51,-52,-53,-54,-55,73,73,-58,-37,-41,-42,-40,-36,-30,-28,73,73,-27,-29,-31,73,-38,73,-39,-26,-32,-33,-34,-35,73,73,73,-25,-24,]),'TkConcat':([31,33,36,37,38,39,40,41,42,43,49,50,52,60,75,77,79,80,81,82,87,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,123,124,125,126,127,133,138,139,140,142,143,144,145,146,156,157,158,161,162,166,],[74,-44,-43,83,86,-61,-62,-63,-64,-65,74,74,74,74,-44,74,-43,83,74,74,74,74,74,74,74,74,-50,-51,-52,-53,-54,-55,74,74,-58,-37,74,74,-40,-36,-30,86,74,74,86,-29,-31,74,-38,74,-39,-26,-32,-33,-34,-35,74,74,74,-25,86,-24,]),'TkArrow':([33,36,37,38,39,40,41,42,43,50,52,81,82,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,118,119,120,121,125,126,127,138,140,142,143,144,145,146,157,158,161,166,],[-44,-43,-59,-60,-61,-62,-63,-64,-65,92,94,-41,-42,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-37,-40,-36,-30,-28,-27,-29,-31,-38,-39,-26,-32,-33,-34,-35,164,165,-25,-24,]),'TkCBracket':([33,36,37,38,39,40,41,42,43,81,82,87,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,118,119,120,121,124,125,126,127,138,140,142,143,144,145,146,154,161,166,],[-44,-43,-59,-60,-61,-62,-63,-64,-65,-41,-42,127,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-37,-40,-36,-30,-28,142,-27,-29,-31,-38,-39,-26,-32,-33,-34,-35,160,-25,-24,]),'TkClosePar':([33,36,37,38,39,40,41,42,43,75,79,80,81,82,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,125,126,127,128,129,130,131,138,139,140,142,143,144,145,146,156,161,166,],[-44,-43,-59,-60,-61,-62,-63,-64,-65,114,118,119,-41,-42,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-37,138,140,-40,-36,-30,-28,-27,-29,-31,143,144,145,146,-38,155,-39,-26,-32,-33,-34,-35,163,-25,-24,]),'TkTo':([33,36,37,38,39,40,41,42,43,81,82,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,118,119,120,121,125,126,127,133,138,140,142,143,144,145,146,161,166,],[-44,-43,-59,-60,-61,-62,-63,-64,-65,-41,-42,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-37,-40,-36,-30,-28,-27,-29,-31,150,-38,-39,-26,-32,-33,-34,-35,-25,-24,]),'TkIn':([51,],[93,]),'TkSoForth':([99,],[137,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'block':([0,2,21,28,92,94,164,165,],[1,13,13,13,13,13,13,168,]),'instruction_block':([2,21,28,],[5,53,59,]),'instructions':([2,21,28,92,94,164,],[6,6,6,132,134,167,]),'assign_inst':([2,21,28,92,94,164,],[7,7,7,7,7,7,]),'input_inst':([2,21,28,92,94,164,],[8,8,8,8,8,8,]),'output_inst':([2,21,28,92,94,164,],[9,9,9,9,9,9,]),'if_guard_inst':([2,21,28,92,94,164,],[10,10,10,10,10,10,]),'iteration_for_inst':([2,21,28,92,94,164,],[11,11,11,11,11,11,]),'iteration_mult_guard_inst':([2,21,28,92,94,164,],[12,12,12,12,12,12,]),'variable_List':([4,54,56,135,],[21,96,98,153,]),'type':([4,54,55,56,135,],[23,23,97,23,23,]),'expression':([16,17,18,20,29,32,34,35,44,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,78,84,85,93,116,122,141,149,150,],[31,49,50,52,60,77,81,82,87,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,117,123,124,133,139,77,156,157,158,]),'binop':([16,17,18,20,29,32,34,35,44,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,78,84,85,93,116,122,141,149,150,],[33,33,33,33,33,75,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'literal':([16,17,18,20,29,32,34,35,44,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,78,84,85,93,116,122,141,149,150,],[36,36,36,36,36,79,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'array_exp':([16,17,18,20,29,32,34,35,44,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,78,83,84,85,86,93,116,122,141,149,150,155,163,],[37,37,37,37,37,80,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,120,37,37,126,37,37,37,37,37,37,161,166,]),'array_exp1':([16,17,18,20,29,32,34,35,44,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,78,84,85,93,116,122,141,149,150,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'guards':([132,134,167,],[148,151,170,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> block","S'",1,None,None,None),
  ('block -> TkOBlock TkCBlock','block',2,'p_block','parser3.py',75),
  ('block -> TkOBlock TkDeclare variable_List instruction_block TkCBlock','block',5,'p_block','parser3.py',76),
  ('block -> TkOBlock instruction_block TkCBlock','block',3,'p_block','parser3.py',77),
  ('variable_List -> TkId TkComma variable_List','variable_List',3,'p_variable_List','parser3.py',95),
  ('variable_List -> TkId TkTwoPoints type TkComma variable_List','variable_List',5,'p_variable_List','parser3.py',96),
  ('variable_List -> TkId TkTwoPoints type TkSemicolon','variable_List',4,'p_variable_List','parser3.py',97),
  ('variable_List -> TkId TkTwoPoints type','variable_List',3,'p_variable_List','parser3.py',98),
  ('variable_List -> type TkComma variable_List','variable_List',3,'p_variable_List','parser3.py',99),
  ('variable_List -> type TkSemicolon','variable_List',2,'p_variable_List','parser3.py',100),
  ('variable_List -> type','variable_List',1,'p_variable_List','parser3.py',101),
  ('type -> TkArray TkOBracket TkNum TkSoForth TkNum TkCBracket','type',6,'p_type','parser3.py',131),
  ('type -> TkInt','type',1,'p_type','parser3.py',132),
  ('type -> TkBool','type',1,'p_type','parser3.py',133),
  ('instruction_block -> instructions TkSemicolon instruction_block','instruction_block',3,'p_instruction_block','parser3.py',142),
  ('instruction_block -> instructions','instruction_block',1,'p_instruction_block','parser3.py',143),
  ('instructions -> assign_inst','instructions',1,'p_instructions','parser3.py',152),
  ('instructions -> input_inst','instructions',1,'p_instructions','parser3.py',153),
  ('instructions -> output_inst','instructions',1,'p_instructions','parser3.py',154),
  ('instructions -> if_guard_inst','instructions',1,'p_instructions','parser3.py',155),
  ('instructions -> iteration_for_inst','instructions',1,'p_instructions','parser3.py',156),
  ('instructions -> iteration_mult_guard_inst','instructions',1,'p_instructions','parser3.py',157),
  ('instructions -> block','instructions',1,'p_instructions','parser3.py',158),
  ('assign_inst -> TkId TkAsig expression','assign_inst',3,'p_assign_inst','parser3.py',163),
  ('array_exp -> TkId TkOpenPar expression TkTwoPoints expression TkClosePar array_exp','array_exp',7,'p_array_exp','parser3.py',168),
  ('array_exp -> TkOpenPar expression TkTwoPoints expression TkClosePar array_exp','array_exp',6,'p_array_exp','parser3.py',169),
  ('array_exp -> TkId TkOBracket expression TkCBracket','array_exp',4,'p_array_exp','parser3.py',170),
  ('array_exp -> TkId TkConcat TkId','array_exp',3,'p_array_exp','parser3.py',171),
  ('array_exp -> array_exp TkConcat TkId','array_exp',3,'p_array_exp','parser3.py',172),
  ('array_exp -> TkId TkConcat array_exp','array_exp',3,'p_array_exp','parser3.py',173),
  ('array_exp -> array_exp TkConcat array_exp','array_exp',3,'p_array_exp','parser3.py',174),
  ('array_exp -> TkOBracket expression TkCBracket','array_exp',3,'p_array_exp','parser3.py',175),
  ('array_exp -> TkAtoi TkOpenPar TkId TkClosePar','array_exp',4,'p_array_exp','parser3.py',176),
  ('array_exp -> TkSize TkOpenPar TkId TkClosePar','array_exp',4,'p_array_exp','parser3.py',177),
  ('array_exp -> TkMax TkOpenPar TkId TkClosePar','array_exp',4,'p_array_exp','parser3.py',178),
  ('array_exp -> TkMin TkOpenPar TkId TkClosePar','array_exp',4,'p_array_exp','parser3.py',179),
  ('array_exp1 -> TkOpenPar array_exp TkClosePar','array_exp1',3,'p_array_exp1','parser3.py',200),
  ('expression -> TkOpenPar binop TkClosePar','expression',3,'p_expression','parser3.py',204),
  ('expression -> TkOpenPar TkUminus expression TkClosePar','expression',4,'p_expression','parser3.py',205),
  ('expression -> TkOpenPar TkNot expression TkClosePar','expression',4,'p_expression','parser3.py',206),
  ('expression -> TkOpenPar literal TkClosePar','expression',3,'p_expression','parser3.py',207),
  ('expression -> TkUminus expression','expression',2,'p_expression','parser3.py',208),
  ('expression -> TkNot expression','expression',2,'p_expression','parser3.py',209),
  ('expression -> literal','expression',1,'p_expression','parser3.py',210),
  ('expression -> binop','expression',1,'p_expression','parser3.py',211),
  ('binop -> expression TkPlus expression','binop',3,'p_binop','parser3.py',232),
  ('binop -> expression TkMinus expression','binop',3,'p_binop','parser3.py',233),
  ('binop -> expression TkMult expression','binop',3,'p_binop','parser3.py',234),
  ('binop -> expression TkDiv expression','binop',3,'p_binop','parser3.py',235),
  ('binop -> expression TkMod expression','binop',3,'p_binop','parser3.py',236),
  ('binop -> expression TkLeq expression','binop',3,'p_binop','parser3.py',237),
  ('binop -> expression TkGeq expression','binop',3,'p_binop','parser3.py',238),
  ('binop -> expression TkLess expression','binop',3,'p_binop','parser3.py',239),
  ('binop -> expression TkGreater expression','binop',3,'p_binop','parser3.py',240),
  ('binop -> expression TkNEqual expression','binop',3,'p_binop','parser3.py',241),
  ('binop -> expression TkEqual expression','binop',3,'p_binop','parser3.py',242),
  ('binop -> expression TkOr expression','binop',3,'p_binop','parser3.py',243),
  ('binop -> expression TkAnd expression','binop',3,'p_binop','parser3.py',244),
  ('binop -> expression TkConcat expression','binop',3,'p_binop','parser3.py',245),
  ('literal -> array_exp','literal',1,'p_literal','parser3.py',278),
  ('literal -> TkId','literal',1,'p_literal','parser3.py',279),
  ('literal -> TkNum','literal',1,'p_literal','parser3.py',280),
  ('literal -> TkFalse','literal',1,'p_literal','parser3.py',281),
  ('literal -> TkTrue','literal',1,'p_literal','parser3.py',282),
  ('literal -> TkString','literal',1,'p_literal','parser3.py',283),
  ('literal -> array_exp1','literal',1,'p_literal','parser3.py',284),
  ('input_inst -> TkRead TkId','input_inst',2,'p_input_inst','parser3.py',301),
  ('output_inst -> TkPrint expression','output_inst',2,'p_output_inst','parser3.py',305),
  ('output_inst -> TkPrintln expression','output_inst',2,'p_output_inst','parser3.py',306),
  ('if_guard_inst -> TkIf expression TkArrow instructions TkFi','if_guard_inst',5,'p_if_guard_inst','parser3.py',310),
  ('if_guard_inst -> TkIf expression TkArrow instructions guards','if_guard_inst',5,'p_if_guard_inst','parser3.py',311),
  ('guards -> TkGuard expression TkArrow instructions TkFi','guards',5,'p_guards','parser3.py',318),
  ('guards -> TkGuard expression TkArrow instructions guards','guards',5,'p_guards','parser3.py',319),
  ('iteration_for_inst -> TkFor TkId TkIn expression TkTo expression TkArrow block TkRof','iteration_for_inst',9,'p_iteration_for_inst','parser3.py',326),
  ('iteration_mult_guard_inst -> TkDo expression TkArrow instructions guards TkOd','iteration_mult_guard_inst',6,'p_iteration_mult_guard_inst','parser3.py',335),
  ('iteration_mult_guard_inst -> TkDo expression TkArrow instructions TkOd','iteration_mult_guard_inst',5,'p_iteration_mult_guard_inst','parser3.py',336),
]
