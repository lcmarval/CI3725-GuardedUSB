
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftTkPlusTkMinusleftTkMultTkDivTkModleftTkOrrightTkAndrightTkNotTkUminusleftTkConcatleftTkOBracketTkCBracketnonassocTkLeqTkGeqTkEqualTkNEqualTkLessTkGreaterleftTkOpenParTkCloseParleftTkArrowTkAnd TkArray TkArrow TkAsig TkAtoi TkBool TkCBlock TkCBracket TkClosePar TkComma TkComments TkConcat TkDeclare TkDiv TkDo TkEqual TkFalse TkFi TkFor TkGeq TkGreater TkGuard TkId TkIf TkIn TkInt TkLeq TkLess TkMax TkMin TkMinus TkMod TkMult TkNEqual TkNot TkNum TkOBlock TkOBracket TkOd TkOpenPar TkOr TkPlus TkPrint TkPrintln TkPunto TkRead TkRof TkSemicolon TkSize TkSoForth TkString TkTo TkTrue TkTwoPoints TkUminusblock : TkOBlock TkCBlock\n\t| TkOBlock TkDeclare variable_List instruction_block TkCBlock \n\t| TkOBlock instruction_block TkCBlock variable_List : TkId TkComma variable_List\t\n\t\t\t\t      | TkId TkTwoPoints type TkComma variable_List\n\t\t\t\t      | TkId TkTwoPoints type TkSemicolon variable_List\n\t\t\t\t      | TkId TkTwoPoints type\n\t\t\t\t      | type TkComma variable_List\n\t\t\t\t      | type TkSemicolon\n\t\t\t\t      | type\n\t\t\t\t      | variable_List variable_List   type : TkArray TkOBracket TkNum TkSoForth TkNum TkCBracket\n\t| TkInt\n\t| TkBool instruction_block : instructions TkSemicolon instruction_block\n\t| instructions instructions : assign_inst\n\t| input_inst\n\t| output_inst\n\t| if_guard_inst\n\t| iteration_for_inst\n\t| iteration_mult_guard_inst\n\t| block assign_inst : TkId TkAsig expressionarray_exp : TkId TkOpenPar expression TkTwoPoints expression TkClosePar array_exp \n\t| TkOpenPar expression TkTwoPoints expression TkClosePar array_exp\n\t| TkId TkOBracket expression TkCBracket\n\t| TkId TkConcat TkId\n\t| array_exp TkConcat TkId\n\t| TkId TkConcat array_exp\n\t| array_exp TkConcat array_exp\n\t| TkOBracket expression TkCBracket\n\t| TkAtoi TkOpenPar TkId TkClosePar\n\t| TkSize TkOpenPar TkId TkClosePar\n\t| TkMax TkOpenPar TkId TkClosePar\n\t| TkMin TkOpenPar TkId TkClosePar\n\t array_exp1 : TkOpenPar array_exp TkClosePar expression : TkOpenPar expression TkPlus expression TkClosePar\n\t| TkOpenPar expression TkMinus expression TkClosePar\n\t| TkOpenPar expression TkMult expression TkClosePar\n    | TkOpenPar expression TkDiv expression TkClosePar\n    | TkOpenPar expression TkMod expression TkClosePar\n    | TkOpenPar expression TkConcat expression TkClosePar\n    | TkOpenPar expression TkGeq expression TkClosePar\n    | TkOpenPar expression TkLess expression TkClosePar\n    | TkOpenPar expression TkGreater expression TkClosePar\n    | TkOpenPar expression TkNEqual expression TkClosePar\n    | TkOpenPar expression TkEqual expression TkClosePar\n    | TkOpenPar expression TkOr expression TkClosePar\n    | TkOpenPar expression TkAnd expression TkClosePar\n    | TkOpenPar TkUminus expression TkClosePar\n    | TkOpenPar TkNot expression TkClosePar\n    | TkOpenPar TkId TkClosePar\n    | TkOpenPar TkNum TkClosePar\n    | TkOpenPar TkFalse TkClosePar\n    | TkOpenPar TkTrue TkClosePar\n    | TkOpenPar TkString TkClosePar \n\t| TkUminus expression\n\t| TkNot expression\n\t| array_exp\n\t| TkId\n\t| TkNum\n\t| TkFalse\n\t| TkTrue\n\t| TkString      \n    | array_exp1 \n\t| expression TkPlus expression\n\t| expression TkMinus expression\n\t| expression TkMult expression\n\t| expression TkDiv expression\n\t| expression TkMod expression\n\t| expression TkLeq expression\n\t| expression TkGeq expression\n\t| expression TkLess expression\n\t| expression TkGreater expression\n\t| expression TkNEqual expression\n\t| expression TkEqual expression  \t\t   \n\t| expression TkOr expression\n\t| expression TkAnd expression\n\t| expression TkConcat expression  input_inst : TkRead TkId output_inst : TkPrint expression\n\t| TkPrintln expression if_guard_inst : TkIf expression TkArrow instructions TkFi \n\t| TkIf expression TkArrow instructions guards\n\tguards : TkGuard expression TkArrow instructions TkFi\n\t| TkGuard expression TkArrow instructions guards  iteration_for_inst : TkFor TkId TkIn expression TkTo expression TkArrow block TkRof\n    iteration_mult_guard_inst : TkDo expression TkArrow instructions guards TkOd\n\t| TkDo expression TkArrow instructions TkOd '
    
_lr_action_items = {'TkOBlock':([0,2,21,23,25,26,28,51,57,95,97,99,100,101,186,187,207,211,212,],[2,2,2,-10,-13,-14,2,-11,-9,2,2,-4,-7,-8,-5,-6,-12,2,2,]),'$end':([1,3,27,98,],[0,-1,-3,-2,]),'TkCBlock':([2,3,5,6,7,8,9,10,11,12,13,27,30,31,35,36,37,38,39,40,41,47,52,59,60,84,85,98,103,104,105,106,107,108,109,110,111,112,113,114,115,116,133,134,135,136,137,138,141,142,144,145,146,171,172,174,176,177,178,179,180,181,185,189,190,191,192,193,194,195,196,197,198,199,200,201,206,208,213,216,217,218,],[3,-1,27,-16,-17,-18,-19,-20,-21,-22,-23,-3,-81,-82,-61,-62,-63,-64,-65,-60,-66,-83,98,-15,-24,-58,-59,-2,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-53,-54,-55,-56,-57,-37,-28,-30,-31,-29,-32,-51,-52,-27,-33,-34,-35,-36,-84,-85,-90,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-89,-26,-25,-86,-87,-88,]),'TkDeclare':([2,],[4,]),'TkId':([2,4,15,16,17,18,19,20,21,23,25,26,28,29,32,33,34,42,51,54,56,57,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,86,87,88,89,91,92,93,94,95,96,97,99,100,101,117,118,119,120,121,122,123,124,125,126,127,128,129,130,143,154,155,173,182,183,186,187,202,207,210,211,],[14,22,30,35,35,35,49,35,53,-10,-13,-14,14,35,78,35,35,35,22,22,22,-9,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,141,145,147,148,149,150,14,35,14,22,-7,22,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,22,22,35,35,35,22,22,209,-12,209,14,]),'TkRead':([2,21,23,25,26,28,51,57,95,97,99,100,101,186,187,207,211,],[15,15,-10,-13,-14,15,-11,-9,15,15,-4,-7,-8,-5,-6,-12,15,]),'TkPrint':([2,21,23,25,26,28,51,57,95,97,99,100,101,186,187,207,211,],[16,16,-10,-13,-14,16,-11,-9,16,16,-4,-7,-8,-5,-6,-12,16,]),'TkPrintln':([2,21,23,25,26,28,51,57,95,97,99,100,101,186,187,207,211,],[17,17,-10,-13,-14,17,-11,-9,17,17,-4,-7,-8,-5,-6,-12,17,]),'TkIf':([2,21,23,25,26,28,51,57,95,97,99,100,101,186,187,207,211,],[18,18,-10,-13,-14,18,-11,-9,18,18,-4,-7,-8,-5,-6,-12,18,]),'TkFor':([2,21,23,25,26,28,51,57,95,97,99,100,101,186,187,207,211,],[19,19,-10,-13,-14,19,-11,-9,19,19,-4,-7,-8,-5,-6,-12,19,]),'TkDo':([2,21,23,25,26,28,51,57,95,97,99,100,101,186,187,207,211,],[20,20,-10,-13,-14,20,-11,-9,20,20,-4,-7,-8,-5,-6,-12,20,]),'TkSemicolon':([3,6,7,8,9,10,11,12,13,23,25,26,27,30,31,35,36,37,38,39,40,41,47,60,84,85,98,100,103,104,105,106,107,108,109,110,111,112,113,114,115,116,133,134,135,136,137,138,141,142,144,145,146,171,172,174,176,177,178,179,180,181,185,189,190,191,192,193,194,195,196,197,198,199,200,201,206,207,208,213,216,217,218,],[-1,28,-17,-18,-19,-20,-21,-22,-23,57,-13,-14,-3,-81,-82,-61,-62,-63,-64,-65,-60,-66,-83,-24,-58,-59,-2,155,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-53,-54,-55,-56,-57,-37,-28,-30,-31,-29,-32,-51,-52,-27,-33,-34,-35,-36,-84,-85,-90,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-89,-12,-26,-25,-86,-87,-88,]),'TkFi':([3,7,8,9,10,11,12,13,27,30,31,35,36,37,38,39,40,41,47,60,84,85,98,103,104,105,106,107,108,109,110,111,112,113,114,115,116,133,134,135,136,137,138,141,142,144,145,146,151,171,172,174,176,177,178,179,180,181,185,189,190,191,192,193,194,195,196,197,198,199,200,201,206,208,213,214,216,217,218,],[-1,-17,-18,-19,-20,-21,-22,-23,-3,-81,-82,-61,-62,-63,-64,-65,-60,-66,-83,-24,-58,-59,-2,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-53,-54,-55,-56,-57,-37,-28,-30,-31,-29,-32,180,-51,-52,-27,-33,-34,-35,-36,-84,-85,-90,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-89,-26,-25,216,-86,-87,-88,]),'TkGuard':([3,7,8,9,10,11,12,13,27,30,31,35,36,37,38,39,40,41,47,60,84,85,98,103,104,105,106,107,108,109,110,111,112,113,114,115,116,133,134,135,136,137,138,141,142,144,145,146,151,153,171,172,174,176,177,178,179,180,181,185,189,190,191,192,193,194,195,196,197,198,199,200,201,206,208,213,214,216,217,218,],[-1,-17,-18,-19,-20,-21,-22,-23,-3,-81,-82,-61,-62,-63,-64,-65,-60,-66,-83,-24,-58,-59,-2,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-53,-54,-55,-56,-57,-37,-28,-30,-31,-29,-32,182,182,-51,-52,-27,-33,-34,-35,-36,-84,-85,-90,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-89,-26,-25,182,-86,-87,-88,]),'TkOd':([3,7,8,9,10,11,12,13,27,30,31,35,36,37,38,39,40,41,47,60,84,85,98,103,104,105,106,107,108,109,110,111,112,113,114,115,116,133,134,135,136,137,138,141,142,144,145,146,153,171,172,174,176,177,178,179,180,181,184,185,189,190,191,192,193,194,195,196,197,198,199,200,201,206,208,213,216,217,218,],[-1,-17,-18,-19,-20,-21,-22,-23,-3,-81,-82,-61,-62,-63,-64,-65,-60,-66,-83,-24,-58,-59,-2,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-53,-54,-55,-56,-57,-37,-28,-30,-31,-29,-32,185,-51,-52,-27,-33,-34,-35,-36,-84,-85,206,-90,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-89,-26,-25,-86,-87,-88,]),'TkRof':([3,27,98,215,],[-1,-3,-2,218,]),'TkArray':([4,21,23,25,26,51,54,55,56,57,99,100,101,154,155,186,187,207,],[24,24,-10,-13,-14,24,24,24,24,-9,24,-7,24,24,24,24,24,-12,]),'TkInt':([4,21,23,25,26,51,54,55,56,57,99,100,101,154,155,186,187,207,],[25,25,-10,-13,-14,25,25,25,25,-9,25,-7,25,25,25,25,25,-12,]),'TkBool':([4,21,23,25,26,51,54,55,56,57,99,100,101,154,155,186,187,207,],[26,26,-10,-13,-14,26,26,26,26,-9,26,-7,26,26,26,26,26,-12,]),'TkAsig':([14,53,],[29,29,]),'TkOpenPar':([16,17,18,20,29,32,33,34,35,42,43,44,45,46,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,78,86,87,88,89,96,117,118,119,120,121,122,123,124,125,126,127,128,129,130,141,143,145,173,182,183,202,209,210,],[32,32,32,32,32,32,32,32,86,32,91,92,93,94,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,86,32,32,143,143,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,86,32,86,32,32,32,143,86,143,]),'TkUminus':([16,17,18,20,29,32,33,34,42,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,86,87,96,117,118,119,120,121,122,123,124,125,126,127,128,129,130,143,173,182,183,],[33,33,33,33,33,76,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'TkNot':([16,17,18,20,29,32,33,34,42,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,86,87,96,117,118,119,120,121,122,123,124,125,126,127,128,129,130,143,173,182,183,],[34,34,34,34,34,77,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'TkNum':([16,17,18,20,29,32,33,34,42,58,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,86,87,96,117,118,119,120,121,122,123,124,125,126,127,128,129,130,143,156,173,182,183,],[36,36,36,36,36,79,36,36,36,102,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,188,36,36,36,]),'TkFalse':([16,17,18,20,29,32,33,34,42,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,86,87,96,117,118,119,120,121,122,123,124,125,126,127,128,129,130,143,173,182,183,],[37,37,37,37,37,80,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'TkTrue':([16,17,18,20,29,32,33,34,42,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,86,87,96,117,118,119,120,121,122,123,124,125,126,127,128,129,130,143,173,182,183,],[38,38,38,38,38,81,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'TkString':([16,17,18,20,29,32,33,34,42,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,86,87,96,117,118,119,120,121,122,123,124,125,126,127,128,129,130,143,173,182,183,],[39,39,39,39,39,82,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'TkOBracket':([16,17,18,20,24,29,32,33,34,35,42,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,78,86,87,88,89,96,117,118,119,120,121,122,123,124,125,126,127,128,129,130,141,143,145,173,182,183,202,209,210,],[42,42,42,42,58,42,42,42,42,87,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,87,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,87,42,87,42,42,42,42,87,42,]),'TkAtoi':([16,17,18,20,29,32,33,34,42,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,86,87,88,89,96,117,118,119,120,121,122,123,124,125,126,127,128,129,130,143,173,182,183,202,210,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'TkSize':([16,17,18,20,29,32,33,34,42,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,86,87,88,89,96,117,118,119,120,121,122,123,124,125,126,127,128,129,130,143,173,182,183,202,210,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'TkMax':([16,17,18,20,29,32,33,34,42,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,86,87,88,89,96,117,118,119,120,121,122,123,124,125,126,127,128,129,130,143,173,182,183,202,210,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'TkMin':([16,17,18,20,29,32,33,34,42,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,86,87,88,89,96,117,118,119,120,121,122,123,124,125,126,127,128,129,130,143,173,182,183,202,210,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'TkComma':([22,23,25,26,53,100,207,],[54,56,-13,-14,54,154,-12,]),'TkTwoPoints':([22,35,36,37,38,39,40,41,53,75,78,79,80,81,82,83,84,85,103,104,105,106,107,108,109,110,111,112,113,114,115,116,131,132,133,134,135,136,137,138,139,141,142,144,145,146,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,174,175,176,177,178,179,189,190,191,192,193,194,195,196,197,198,199,200,201,208,213,],[55,-61,-62,-63,-64,-65,-60,-66,55,130,-61,-62,-63,-64,-65,-60,-58,-59,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-58,-59,-53,-54,-55,-56,-57,-37,173,-28,-30,-31,-29,-32,-67,-68,-69,-70,-71,-80,-73,-74,-75,-76,-77,-78,-79,-51,-52,-27,130,-33,-34,-35,-36,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-26,-25,]),'TkPlus':([31,35,36,37,38,39,40,41,47,48,50,60,75,78,79,80,81,82,83,84,85,90,103,104,105,106,107,108,109,110,111,112,113,114,115,116,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,152,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,189,190,191,192,193,194,195,196,197,198,199,200,201,203,204,205,208,213,],[61,-61,-62,-63,-64,-65,-60,-66,61,61,61,61,117,-61,-62,-63,-64,-65,-60,-58,-59,61,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-58,-59,-53,-54,-55,-56,-57,-37,61,61,-28,-30,-31,-29,-32,61,-67,-68,-69,-70,-71,-80,-73,-74,-75,-76,-77,-78,-79,61,-51,-52,-27,61,-33,-34,-35,-36,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,61,61,61,-26,-25,]),'TkMinus':([31,35,36,37,38,39,40,41,47,48,50,60,75,78,79,80,81,82,83,84,85,90,103,104,105,106,107,108,109,110,111,112,113,114,115,116,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,152,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,189,190,191,192,193,194,195,196,197,198,199,200,201,203,204,205,208,213,],[62,-61,-62,-63,-64,-65,-60,-66,62,62,62,62,118,-61,-62,-63,-64,-65,-60,-58,-59,62,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-58,-59,-53,-54,-55,-56,-57,-37,62,62,-28,-30,-31,-29,-32,62,-67,-68,-69,-70,-71,-80,-73,-74,-75,-76,-77,-78,-79,62,-51,-52,-27,62,-33,-34,-35,-36,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,62,62,62,-26,-25,]),'TkMult':([31,35,36,37,38,39,40,41,47,48,50,60,75,78,79,80,81,82,83,84,85,90,103,104,105,106,107,108,109,110,111,112,113,114,115,116,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,152,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,189,190,191,192,193,194,195,196,197,198,199,200,201,203,204,205,208,213,],[63,-61,-62,-63,-64,-65,-60,-66,63,63,63,63,119,-61,-62,-63,-64,-65,-60,-58,-59,63,63,63,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-58,-59,-53,-54,-55,-56,-57,-37,63,63,-28,-30,-31,-29,-32,63,63,63,-69,-70,-71,-80,-73,-74,-75,-76,-77,-78,-79,63,-51,-52,-27,63,-33,-34,-35,-36,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,63,63,63,-26,-25,]),'TkDiv':([31,35,36,37,38,39,40,41,47,48,50,60,75,78,79,80,81,82,83,84,85,90,103,104,105,106,107,108,109,110,111,112,113,114,115,116,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,152,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,189,190,191,192,193,194,195,196,197,198,199,200,201,203,204,205,208,213,],[64,-61,-62,-63,-64,-65,-60,-66,64,64,64,64,120,-61,-62,-63,-64,-65,-60,-58,-59,64,64,64,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-58,-59,-53,-54,-55,-56,-57,-37,64,64,-28,-30,-31,-29,-32,64,64,64,-69,-70,-71,-80,-73,-74,-75,-76,-77,-78,-79,64,-51,-52,-27,64,-33,-34,-35,-36,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,64,64,64,-26,-25,]),'TkMod':([31,35,36,37,38,39,40,41,47,48,50,60,75,78,79,80,81,82,83,84,85,90,103,104,105,106,107,108,109,110,111,112,113,114,115,116,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,152,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,189,190,191,192,193,194,195,196,197,198,199,200,201,203,204,205,208,213,],[65,-61,-62,-63,-64,-65,-60,-66,65,65,65,65,121,-61,-62,-63,-64,-65,-60,-58,-59,65,65,65,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-58,-59,-53,-54,-55,-56,-57,-37,65,65,-28,-30,-31,-29,-32,65,65,65,-69,-70,-71,-80,-73,-74,-75,-76,-77,-78,-79,65,-51,-52,-27,65,-33,-34,-35,-36,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,65,65,65,-26,-25,]),'TkLeq':([31,35,36,37,38,39,40,41,47,48,50,60,75,78,79,80,81,82,83,84,85,90,103,104,105,106,107,108,109,110,111,112,113,114,115,116,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,152,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,189,190,191,192,193,194,195,196,197,198,199,200,201,203,204,205,208,213,],[66,-61,-62,-63,-64,-65,-60,-66,66,66,66,66,66,-61,-62,-63,-64,-65,-60,66,66,66,66,66,66,66,66,None,None,None,None,None,None,66,66,66,66,66,-53,-54,-55,-56,-57,-37,66,66,-28,-30,-31,-29,-32,66,66,66,66,66,66,66,None,None,None,None,None,66,66,66,-51,-52,-27,66,-33,-34,-35,-36,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,66,66,66,-26,-25,]),'TkGeq':([31,35,36,37,38,39,40,41,47,48,50,60,75,78,79,80,81,82,83,84,85,90,103,104,105,106,107,108,109,110,111,112,113,114,115,116,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,152,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,189,190,191,192,193,194,195,196,197,198,199,200,201,203,204,205,208,213,],[67,-61,-62,-63,-64,-65,-60,-66,67,67,67,67,123,-61,-62,-63,-64,-65,-60,67,67,67,67,67,67,67,67,None,None,None,None,None,None,67,67,67,67,67,-53,-54,-55,-56,-57,-37,67,67,-28,-30,-31,-29,-32,67,67,67,67,67,67,67,None,None,None,None,None,67,67,67,-51,-52,-27,67,-33,-34,-35,-36,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,67,67,67,-26,-25,]),'TkLess':([31,35,36,37,38,39,40,41,47,48,50,60,75,78,79,80,81,82,83,84,85,90,103,104,105,106,107,108,109,110,111,112,113,114,115,116,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,152,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,189,190,191,192,193,194,195,196,197,198,199,200,201,203,204,205,208,213,],[68,-61,-62,-63,-64,-65,-60,-66,68,68,68,68,124,-61,-62,-63,-64,-65,-60,68,68,68,68,68,68,68,68,None,None,None,None,None,None,68,68,68,68,68,-53,-54,-55,-56,-57,-37,68,68,-28,-30,-31,-29,-32,68,68,68,68,68,68,68,None,None,None,None,None,68,68,68,-51,-52,-27,68,-33,-34,-35,-36,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,68,68,68,-26,-25,]),'TkGreater':([31,35,36,37,38,39,40,41,47,48,50,60,75,78,79,80,81,82,83,84,85,90,103,104,105,106,107,108,109,110,111,112,113,114,115,116,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,152,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,189,190,191,192,193,194,195,196,197,198,199,200,201,203,204,205,208,213,],[69,-61,-62,-63,-64,-65,-60,-66,69,69,69,69,125,-61,-62,-63,-64,-65,-60,69,69,69,69,69,69,69,69,None,None,None,None,None,None,69,69,69,69,69,-53,-54,-55,-56,-57,-37,69,69,-28,-30,-31,-29,-32,69,69,69,69,69,69,69,None,None,None,None,None,69,69,69,-51,-52,-27,69,-33,-34,-35,-36,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,69,69,69,-26,-25,]),'TkNEqual':([31,35,36,37,38,39,40,41,47,48,50,60,75,78,79,80,81,82,83,84,85,90,103,104,105,106,107,108,109,110,111,112,113,114,115,116,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,152,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,189,190,191,192,193,194,195,196,197,198,199,200,201,203,204,205,208,213,],[70,-61,-62,-63,-64,-65,-60,-66,70,70,70,70,126,-61,-62,-63,-64,-65,-60,70,70,70,70,70,70,70,70,None,None,None,None,None,None,70,70,70,70,70,-53,-54,-55,-56,-57,-37,70,70,-28,-30,-31,-29,-32,70,70,70,70,70,70,70,None,None,None,None,None,70,70,70,-51,-52,-27,70,-33,-34,-35,-36,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,70,70,70,-26,-25,]),'TkEqual':([31,35,36,37,38,39,40,41,47,48,50,60,75,78,79,80,81,82,83,84,85,90,103,104,105,106,107,108,109,110,111,112,113,114,115,116,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,152,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,189,190,191,192,193,194,195,196,197,198,199,200,201,203,204,205,208,213,],[71,-61,-62,-63,-64,-65,-60,-66,71,71,71,71,127,-61,-62,-63,-64,-65,-60,71,71,71,71,71,71,71,71,None,None,None,None,None,None,71,71,71,71,71,-53,-54,-55,-56,-57,-37,71,71,-28,-30,-31,-29,-32,71,71,71,71,71,71,71,None,None,None,None,None,71,71,71,-51,-52,-27,71,-33,-34,-35,-36,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,71,71,71,-26,-25,]),'TkOr':([31,35,36,37,38,39,40,41,47,48,50,60,75,78,79,80,81,82,83,84,85,90,103,104,105,106,107,108,109,110,111,112,113,114,115,116,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,152,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,189,190,191,192,193,194,195,196,197,198,199,200,201,203,204,205,208,213,],[72,-61,-62,-63,-64,-65,-60,-66,72,72,72,72,128,-61,-62,-63,-64,-65,-60,-58,-59,72,72,72,72,72,72,-72,-73,-74,-75,-76,-77,-78,-79,-80,-58,-59,-53,-54,-55,-56,-57,-37,72,72,-28,-30,-31,-29,-32,72,72,72,72,72,72,-80,-73,-74,-75,-76,-77,-78,-79,72,-51,-52,-27,72,-33,-34,-35,-36,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,72,72,72,-26,-25,]),'TkAnd':([31,35,36,37,38,39,40,41,47,48,50,60,75,78,79,80,81,82,83,84,85,90,103,104,105,106,107,108,109,110,111,112,113,114,115,116,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,152,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,189,190,191,192,193,194,195,196,197,198,199,200,201,203,204,205,208,213,],[73,-61,-62,-63,-64,-65,-60,-66,73,73,73,73,129,-61,-62,-63,-64,-65,-60,-58,-59,73,73,73,73,73,73,-72,-73,-74,-75,-76,-77,73,73,-80,-58,-59,-53,-54,-55,-56,-57,-37,73,73,-28,-30,-31,-29,-32,73,73,73,73,73,73,-80,-73,-74,-75,-76,-77,73,73,73,-51,-52,-27,73,-33,-34,-35,-36,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,73,73,73,-26,-25,]),'TkConcat':([31,35,36,37,38,39,40,41,47,48,50,60,75,78,79,80,81,82,83,84,85,90,103,104,105,106,107,108,109,110,111,112,113,114,115,116,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,152,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,189,190,191,192,193,194,195,196,197,198,199,200,201,203,204,205,208,209,213,],[74,88,-62,-63,-64,-65,89,-66,74,74,74,74,122,88,-62,-63,-64,-65,89,74,74,74,74,74,74,74,74,-72,-73,-74,-75,-76,-77,74,74,-80,74,74,-53,-54,-55,-56,-57,-37,74,74,88,-30,-31,88,-32,74,74,74,74,74,74,-80,-73,-74,-75,-76,-77,74,74,74,-51,-52,-27,74,-33,-34,-35,-36,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,74,74,74,-26,88,-25,]),'TkArrow':([35,36,37,38,39,40,41,48,50,84,85,103,104,105,106,107,108,109,110,111,112,113,114,115,116,133,134,135,136,137,138,141,142,144,145,146,171,172,174,176,177,178,179,189,190,191,192,193,194,195,196,197,198,199,200,201,204,205,208,213,],[-61,-62,-63,-64,-65,-60,-66,95,97,-58,-59,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-53,-54,-55,-56,-57,-37,-28,-30,-31,-29,-32,-51,-52,-27,-33,-34,-35,-36,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,211,212,-26,-25,]),'TkCBracket':([35,36,37,38,39,40,41,84,85,90,103,104,105,106,107,108,109,110,111,112,113,114,115,116,133,134,135,136,137,138,140,141,142,144,145,146,171,172,174,176,177,178,179,188,189,190,191,192,193,194,195,196,197,198,199,200,201,208,213,],[-61,-62,-63,-64,-65,-60,-66,-58,-59,146,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-53,-54,-55,-56,-57,-37,174,-28,-30,-31,-29,-32,-51,-52,-27,-33,-34,-35,-36,207,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-26,-25,]),'TkClosePar':([35,36,37,38,39,40,41,78,79,80,81,82,83,84,85,103,104,105,106,107,108,109,110,111,112,113,114,115,116,131,132,133,134,135,136,137,138,141,142,144,145,146,147,148,149,150,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,176,177,178,179,189,190,191,192,193,194,195,196,197,198,199,200,201,203,208,213,],[-61,-62,-63,-64,-65,-60,-66,133,134,135,136,137,138,-58,-59,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,171,172,-53,-54,-55,-56,-57,-37,-28,-30,-31,-29,-32,176,177,178,179,189,190,191,192,193,194,195,196,197,198,199,200,201,202,-51,-52,-27,-33,-34,-35,-36,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,210,-26,-25,]),'TkTo':([35,36,37,38,39,40,41,84,85,103,104,105,106,107,108,109,110,111,112,113,114,115,116,133,134,135,136,137,138,141,142,144,145,146,152,171,172,174,176,177,178,179,189,190,191,192,193,194,195,196,197,198,199,200,201,208,213,],[-61,-62,-63,-64,-65,-60,-66,-58,-59,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-53,-54,-55,-56,-57,-37,-28,-30,-31,-29,-32,183,-51,-52,-27,-33,-34,-35,-36,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-26,-25,]),'TkIn':([49,],[96,]),'TkSoForth':([102,],[156,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'block':([0,2,21,28,95,97,211,212,],[1,13,13,13,13,13,13,215,]),'instruction_block':([2,21,28,],[5,52,59,]),'instructions':([2,21,28,95,97,211,],[6,6,6,151,153,214,]),'assign_inst':([2,21,28,95,97,211,],[7,7,7,7,7,7,]),'input_inst':([2,21,28,95,97,211,],[8,8,8,8,8,8,]),'output_inst':([2,21,28,95,97,211,],[9,9,9,9,9,9,]),'if_guard_inst':([2,21,28,95,97,211,],[10,10,10,10,10,10,]),'iteration_for_inst':([2,21,28,95,97,211,],[11,11,11,11,11,11,]),'iteration_mult_guard_inst':([2,21,28,95,97,211,],[12,12,12,12,12,12,]),'variable_List':([4,21,51,54,56,99,101,154,155,186,187,],[21,51,51,99,101,51,51,186,187,51,51,]),'type':([4,21,51,54,55,56,99,101,154,155,186,187,],[23,23,23,23,100,23,23,23,23,23,23,23,]),'expression':([16,17,18,20,29,32,33,34,42,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,86,87,96,117,118,119,120,121,122,123,124,125,126,127,128,129,130,143,173,182,183,],[31,47,48,50,60,75,84,85,90,103,104,105,106,107,108,109,110,111,112,113,114,115,116,131,132,139,140,152,157,158,159,160,161,162,163,164,165,166,167,168,169,170,175,203,204,205,]),'array_exp':([16,17,18,20,29,32,33,34,42,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,86,87,88,89,96,117,118,119,120,121,122,123,124,125,126,127,128,129,130,143,173,182,183,202,210,],[40,40,40,40,40,83,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,142,144,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,208,213,]),'array_exp1':([16,17,18,20,29,32,33,34,42,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,86,87,96,117,118,119,120,121,122,123,124,125,126,127,128,129,130,143,173,182,183,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'guards':([151,153,214,],[181,184,217,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> block","S'",1,None,None,None),
  ('block -> TkOBlock TkCBlock','block',2,'p_block','parser.py',75),
  ('block -> TkOBlock TkDeclare variable_List instruction_block TkCBlock','block',5,'p_block','parser.py',76),
  ('block -> TkOBlock instruction_block TkCBlock','block',3,'p_block','parser.py',77),
  ('variable_List -> TkId TkComma variable_List','variable_List',3,'p_variable_List','parser.py',95),
  ('variable_List -> TkId TkTwoPoints type TkComma variable_List','variable_List',5,'p_variable_List','parser.py',96),
  ('variable_List -> TkId TkTwoPoints type TkSemicolon variable_List','variable_List',5,'p_variable_List','parser.py',97),
  ('variable_List -> TkId TkTwoPoints type','variable_List',3,'p_variable_List','parser.py',98),
  ('variable_List -> type TkComma variable_List','variable_List',3,'p_variable_List','parser.py',99),
  ('variable_List -> type TkSemicolon','variable_List',2,'p_variable_List','parser.py',100),
  ('variable_List -> type','variable_List',1,'p_variable_List','parser.py',101),
  ('variable_List -> variable_List variable_List','variable_List',2,'p_variable_List','parser.py',102),
  ('type -> TkArray TkOBracket TkNum TkSoForth TkNum TkCBracket','type',6,'p_type','parser.py',132),
  ('type -> TkInt','type',1,'p_type','parser.py',133),
  ('type -> TkBool','type',1,'p_type','parser.py',134),
  ('instruction_block -> instructions TkSemicolon instruction_block','instruction_block',3,'p_instruction_block','parser.py',143),
  ('instruction_block -> instructions','instruction_block',1,'p_instruction_block','parser.py',144),
  ('instructions -> assign_inst','instructions',1,'p_instructions','parser.py',153),
  ('instructions -> input_inst','instructions',1,'p_instructions','parser.py',154),
  ('instructions -> output_inst','instructions',1,'p_instructions','parser.py',155),
  ('instructions -> if_guard_inst','instructions',1,'p_instructions','parser.py',156),
  ('instructions -> iteration_for_inst','instructions',1,'p_instructions','parser.py',157),
  ('instructions -> iteration_mult_guard_inst','instructions',1,'p_instructions','parser.py',158),
  ('instructions -> block','instructions',1,'p_instructions','parser.py',159),
  ('assign_inst -> TkId TkAsig expression','assign_inst',3,'p_assign_inst','parser.py',164),
  ('array_exp -> TkId TkOpenPar expression TkTwoPoints expression TkClosePar array_exp','array_exp',7,'p_array_exp','parser.py',169),
  ('array_exp -> TkOpenPar expression TkTwoPoints expression TkClosePar array_exp','array_exp',6,'p_array_exp','parser.py',170),
  ('array_exp -> TkId TkOBracket expression TkCBracket','array_exp',4,'p_array_exp','parser.py',171),
  ('array_exp -> TkId TkConcat TkId','array_exp',3,'p_array_exp','parser.py',172),
  ('array_exp -> array_exp TkConcat TkId','array_exp',3,'p_array_exp','parser.py',173),
  ('array_exp -> TkId TkConcat array_exp','array_exp',3,'p_array_exp','parser.py',174),
  ('array_exp -> array_exp TkConcat array_exp','array_exp',3,'p_array_exp','parser.py',175),
  ('array_exp -> TkOBracket expression TkCBracket','array_exp',3,'p_array_exp','parser.py',176),
  ('array_exp -> TkAtoi TkOpenPar TkId TkClosePar','array_exp',4,'p_array_exp','parser.py',177),
  ('array_exp -> TkSize TkOpenPar TkId TkClosePar','array_exp',4,'p_array_exp','parser.py',178),
  ('array_exp -> TkMax TkOpenPar TkId TkClosePar','array_exp',4,'p_array_exp','parser.py',179),
  ('array_exp -> TkMin TkOpenPar TkId TkClosePar','array_exp',4,'p_array_exp','parser.py',180),
  ('array_exp1 -> TkOpenPar array_exp TkClosePar','array_exp1',3,'p_array_exp1','parser.py',201),
  ('expression -> TkOpenPar expression TkPlus expression TkClosePar','expression',5,'p_expression','parser.py',205),
  ('expression -> TkOpenPar expression TkMinus expression TkClosePar','expression',5,'p_expression','parser.py',206),
  ('expression -> TkOpenPar expression TkMult expression TkClosePar','expression',5,'p_expression','parser.py',207),
  ('expression -> TkOpenPar expression TkDiv expression TkClosePar','expression',5,'p_expression','parser.py',208),
  ('expression -> TkOpenPar expression TkMod expression TkClosePar','expression',5,'p_expression','parser.py',209),
  ('expression -> TkOpenPar expression TkConcat expression TkClosePar','expression',5,'p_expression','parser.py',210),
  ('expression -> TkOpenPar expression TkGeq expression TkClosePar','expression',5,'p_expression','parser.py',211),
  ('expression -> TkOpenPar expression TkLess expression TkClosePar','expression',5,'p_expression','parser.py',212),
  ('expression -> TkOpenPar expression TkGreater expression TkClosePar','expression',5,'p_expression','parser.py',213),
  ('expression -> TkOpenPar expression TkNEqual expression TkClosePar','expression',5,'p_expression','parser.py',214),
  ('expression -> TkOpenPar expression TkEqual expression TkClosePar','expression',5,'p_expression','parser.py',215),
  ('expression -> TkOpenPar expression TkOr expression TkClosePar','expression',5,'p_expression','parser.py',216),
  ('expression -> TkOpenPar expression TkAnd expression TkClosePar','expression',5,'p_expression','parser.py',217),
  ('expression -> TkOpenPar TkUminus expression TkClosePar','expression',4,'p_expression','parser.py',218),
  ('expression -> TkOpenPar TkNot expression TkClosePar','expression',4,'p_expression','parser.py',219),
  ('expression -> TkOpenPar TkId TkClosePar','expression',3,'p_expression','parser.py',220),
  ('expression -> TkOpenPar TkNum TkClosePar','expression',3,'p_expression','parser.py',221),
  ('expression -> TkOpenPar TkFalse TkClosePar','expression',3,'p_expression','parser.py',222),
  ('expression -> TkOpenPar TkTrue TkClosePar','expression',3,'p_expression','parser.py',223),
  ('expression -> TkOpenPar TkString TkClosePar','expression',3,'p_expression','parser.py',224),
  ('expression -> TkUminus expression','expression',2,'p_expression','parser.py',225),
  ('expression -> TkNot expression','expression',2,'p_expression','parser.py',226),
  ('expression -> array_exp','expression',1,'p_expression','parser.py',227),
  ('expression -> TkId','expression',1,'p_expression','parser.py',228),
  ('expression -> TkNum','expression',1,'p_expression','parser.py',229),
  ('expression -> TkFalse','expression',1,'p_expression','parser.py',230),
  ('expression -> TkTrue','expression',1,'p_expression','parser.py',231),
  ('expression -> TkString','expression',1,'p_expression','parser.py',232),
  ('expression -> array_exp1','expression',1,'p_expression','parser.py',233),
  ('expression -> expression TkPlus expression','expression',3,'p_expression','parser.py',234),
  ('expression -> expression TkMinus expression','expression',3,'p_expression','parser.py',235),
  ('expression -> expression TkMult expression','expression',3,'p_expression','parser.py',236),
  ('expression -> expression TkDiv expression','expression',3,'p_expression','parser.py',237),
  ('expression -> expression TkMod expression','expression',3,'p_expression','parser.py',238),
  ('expression -> expression TkLeq expression','expression',3,'p_expression','parser.py',239),
  ('expression -> expression TkGeq expression','expression',3,'p_expression','parser.py',240),
  ('expression -> expression TkLess expression','expression',3,'p_expression','parser.py',241),
  ('expression -> expression TkGreater expression','expression',3,'p_expression','parser.py',242),
  ('expression -> expression TkNEqual expression','expression',3,'p_expression','parser.py',243),
  ('expression -> expression TkEqual expression','expression',3,'p_expression','parser.py',244),
  ('expression -> expression TkOr expression','expression',3,'p_expression','parser.py',245),
  ('expression -> expression TkAnd expression','expression',3,'p_expression','parser.py',246),
  ('expression -> expression TkConcat expression','expression',3,'p_expression','parser.py',247),
  ('input_inst -> TkRead TkId','input_inst',2,'p_input_inst','parser.py',281),
  ('output_inst -> TkPrint expression','output_inst',2,'p_output_inst','parser.py',285),
  ('output_inst -> TkPrintln expression','output_inst',2,'p_output_inst','parser.py',286),
  ('if_guard_inst -> TkIf expression TkArrow instructions TkFi','if_guard_inst',5,'p_if_guard_inst','parser.py',290),
  ('if_guard_inst -> TkIf expression TkArrow instructions guards','if_guard_inst',5,'p_if_guard_inst','parser.py',291),
  ('guards -> TkGuard expression TkArrow instructions TkFi','guards',5,'p_guards','parser.py',298),
  ('guards -> TkGuard expression TkArrow instructions guards','guards',5,'p_guards','parser.py',299),
  ('iteration_for_inst -> TkFor TkId TkIn expression TkTo expression TkArrow block TkRof','iteration_for_inst',9,'p_iteration_for_inst','parser.py',306),
  ('iteration_mult_guard_inst -> TkDo expression TkArrow instructions guards TkOd','iteration_mult_guard_inst',6,'p_iteration_mult_guard_inst','parser.py',315),
  ('iteration_mult_guard_inst -> TkDo expression TkArrow instructions TkOd','iteration_mult_guard_inst',5,'p_iteration_mult_guard_inst','parser.py',316),
]
